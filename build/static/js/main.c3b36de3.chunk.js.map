{"version":3,"sources":["components/Footer.js","components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","initialNotes","catch","error","notesToShow","filter","map","find","n","changedNote","returnedNote","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","e","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3b36de3.chunk.js","sourcesContent":["const Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'white',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16,\r\n\t}\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>Made by Tharun</em>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Footer\r\n","const Note = ({ note, toggleImportance }) => {\r\n  const label =\r\n    note.important === true ? \"make not important\" : \"make important\"\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content} <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","const Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return <div className=\"error\">{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then((response) => response.data)\r\n}\r\nconst noteService = { getAll, create, update }\r\n\r\nexport default noteService\r\n","import { useEffect, useState } from 'react'\nimport Footer from './components/Footer'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([])\n\tconst [newNote, setNewNote] = useState('')\n\tconst [showAll, setShowAll] = useState(true)\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\n\tuseEffect(() => {\n\t\tconsole.log('effect')\n\t\tnoteService\n\t\t\t.getAll()\n\t\t\t.then((initialNotes) => {\n\t\t\t\t// initalNotes is response.data from getAll() function\n\t\t\t\tsetNotes(initialNotes)\n\t\t\t})\n\t\t\t.catch((error) => console.log('fail'))\n\t}, [])\n\n\tconst notesToShow =\n\t\tshowAll === true ? notes : notes.filter((note) => note.important === true)\n\n\tconst addNote = (event) => {\n\t\tevent.preventDefault()\n\t\tconst noteObject = {\n\t\t\tcontent: newNote,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() < 0.5,\n\t\t}\n\n\t\tnoteService\n\t\t\t.create(noteObject)\n\t\t\t.then((returnedNote) => {\n\t\t\t\tsetNotes([...notes, returnedNote])\n\t\t\t\tsetNewNote('')\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error.response.data.error)\n\t\t\t\tsetErrorMessage(error.response.data.error)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 5000)\n\t\t\t})\n\t}\n\n\tconst handleNoteChange = (e) => {\n\t\tsetNewNote(e.target.value)\n\t}\n\n\tconst toggleImportanceOf = (id) => {\n\t\tconst note = notes.find((n) => n.id === id)\n\t\tconst changedNote = { ...note, important: !note.important }\n\n\t\tnoteService\n\t\t\t.update(id, changedNote)\n\t\t\t.then((returnedNote) => {\n\t\t\t\tsetNotes(\n\t\t\t\t\tnotes.map((note) => {\n\t\t\t\t\t\treturn note.id !== id ? note : returnedNote\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`the note \"${note.content}\" was already removed from server`\n\t\t\t\t)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 5000)\n\t\t\t\tsetNotes(notes.filter((n) => n.id !== id))\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes App</h1>\n\t\t\t<Notification message={errorMessage} />\n\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\tShow {showAll === true ? 'Important' : 'All'}\n\t\t\t</button>\n\t\t\t<ul>\n\t\t\t\t{notesToShow.map((note) => (\n\t\t\t\t\t<Note\n\t\t\t\t\t\tkey={note.id}\n\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<form onSubmit={addNote}>\n\t\t\t\t<input value={newNote} onChange={handleNoteChange} />\n\t\t\t\t<button type='submit'>Save</button>\n\t\t\t</form>\n\t\t\t<Footer />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import ReactDOM from \"react-dom\"\nimport App from \"./App.js\"\nimport \"./index.css\"\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}