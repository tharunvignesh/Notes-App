{"version":3,"sources":["components/Footer.js","components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","catch","error","length","notesToShow","filter","map","find","n","changedNote","returnedNote","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","e","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a41eea28.chunk.js","sourcesContent":["const Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app</em>\r\n    </div>\r\n  )\r\n}\r\nexport default Footer\r\n","const Note = ({ note, toggleImportance }) => {\r\n  const label =\r\n    note.important === true ? \"make not important\" : \"make important\"\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content} <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","const Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return <div className=\"error\">{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/notes\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n","import { useEffect, useState } from \"react\"\nimport Footer from \"./components/Footer\"\nimport Note from \"./components/Note\"\nimport Notification from \"./components/Notification\"\nimport noteService from \"./services/notes\"\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"\")\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    console.log(\"effect\")\n    noteService\n      .getAll()\n      .then((initialNotes) => {\n        // initalNotes is response.data from getAll() function\n        console.log(initialNotes)\n        setNotes(initialNotes)\n      })\n      .catch((error) => console.log(\"fail\"))\n  }, [])\n  console.log(\"render\", notes.length, \"notes\")\n\n  const notesToShow =\n    showAll === true ? notes : notes.filter((note) => note.important === true)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes([...notes, returnedNote])\n      setNewNote(\"\")\n    })\n  }\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      })\n      .catch((error) => {\n        console.log(error)\n        setErrorMessage(\n          `the note \"${note.content}\" was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter((n) => n.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <button onClick={() => setShowAll(!showAll)}>\n        Show {showAll === true ? \"Important\" : \"All\"}\n      </button>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">Save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from \"react-dom\"\nimport App from \"./App.js\"\nimport \"./index.css\"\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}